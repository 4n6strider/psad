.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH PSAD 8 "September, 2001" Linux
.SH NAME
.I psad
\- The Port Scan Attack Detector
.SH SYNOPSIS
.B psad [-D] [-d] [-o] [-e] [-f] [-r] [-S] [-w] [-l] [-K] [-R] [-V] [-i <interval>] [-h] [-c <config file>] [-s <signature file>] [-a <auto ips file>]
.SH DESCRIPTION
.B psad
makes use of ipchains/iptables log messages to detect, alert, and
(optionally) block port scans in real time. psad configures syslog to
write all kern.info messages to a named pipe
.B /var/log/psadfifo
and then reads all messages out of the pipe that are matched by a regular
expression designed to catch any packets that have been
dropped/denied/rejected by the firewall. In this way psad is supplied
with a pure data stream that exclusively contains packets that the
firewall has deemed unfit to enter the network. For iptables
firewalls in the 2.4.x series kernels, psad analyzes the tcp flags
used in the scan to determine the scan type (syn, fin, xmas, etc.)
and the corresponding command line options that could be supplied to
nmap to generate such a scan. In addition, psad makes use of many tcp
and udp signatures contained within the Snort intrusion detection
system (see http://www.snort.org) to detect suspect network traffic such
as probes for common backdoors, DDoS tools, OS fingerprinting attempts,
and more. Psad features a set of highly configurable danger thresholds
(with sensible defaults provided) that allow the administrator to define
what constitutes a port scan or other suspect traffic. Email alerts sent
by psad contain the scanning ip, number of packets to each port, any tcp
or udp signatures that have been matched (e.g. "NMAP XMAS scan"), the
scanned port range, the current danger level (from 1 to 5), reverse dns
info, and whois information.

.B psad
consists of four daemons: psad, kmsgsd, psadwatchd, and diskmond.
.B psad
is responsible for processing all packets that have been denied by the firewall and applying the signature logic in
order to determine what type of scan has been leveraged against the
network.
.B kmsgsd
reads all messages that have been written to the
.B /var/log/psadfifo
named pipe and writes any message that matches a particular regular
expression to
.B /var/log/psad/fwdata.
.B psadwatchd
is a software watchdog that will restart kmsgsd and/or psad should
either daemon die for any reason.
.B diskmond
is responsible for keeping track of the disk space utilization on the partition
that contains the
.B fwdata
logfile and will zero out the file as necessary
if the available space becomes less than a threshold defined by the
administrator.
.SH OPTIONS
.PP
.PD 0
.TP
.BR \-D ", " \-\^\-Daemon
Do not run psad as a daemon. This option is most useful
if used in conjunction with --output so that scan warning messages
can be viewed on STDOUT instead of being written to
.B /var/log/psad/scanlog.
.TP

.BR \-e ", " \-\^\-error
Occasionally messages written by syslog to
.B /var/log/psadfifo
or to
.B /var/log/messages
do not conform to the normal firewall logging format. psad
will write these message to
.B /var/log/psad/fwerrorlog
by default. Passing the --error option will make psad ignore
all such erroneous firewall messages.
.TP

.BR \-d ", " \-\^\-debug
Run psad in debugging mode. This will automatically prevent
psad from running as a daemon, and will print the contents
of the %Scan hash and a few other things on STDOUT at crucial
points as psad executes.
.TP

.BR \-i ", " \-\^\-interval\ \<seconds>
Specify the interval (in seconds) that psad should use to
check whether or not packets have been denied by the
firewall. Psad will use the default of 15 seconds unless a
different value is specified.
.TP

.BR \-o ", " \-\^\-output
By default all scan warning messages generated by psad are
written to
.B /var/log/psad/scanlog.
Passing the --output option instructs psad to write all error
messages to STDOUT.
.TP

.BR \-f ", " \-\^\-firewallcheck
psad performs a rudimentary check of the firewall ruleset that
exists on the machine on which psad is deployed to determine
whether or not the firewall has a compatible configuration.
Passing the --firewallcheck or --Logging_server options will
disable this check.
.TP

.BR \-K ", " \-\^\-Kill
Kill the current psad process along with psadwatchd, kmsgsd,
and diskmond. This provides a quick and easy way to kill
all psad processes without having to look in the process table or
appeal to the psad-init script.
.TP

.BR \-R ", " \-\^\-Restart
Restart the currently running psad processes.  This option will
preserve the command line options that were supplied to the original
psad process.
.TP

.BR \-S ", " \-\^\-Status
Display the status of any psad processes that may or not be running.
.TP

.BR \-U ", " \-\^\-USR1
Send a running psad process a USR1 signal.  This will cause psad to
dump the contents of the %Scan hash to the file "/var/log/psad/scan_hash.$$"
where "$$" represents the pid of the psad process.  This is mostly
useful for debugging purposes, but it also allows the administrator to
peer into the %Scan hash, which is the primary data structure used to
store scan data within system memory.
.TP

.BR \-c ", " \-\^\-config\ \<configuration\ file>
By default psad uses configuration parameters that are
present within the configuration section of the psad script
itself. This can be overridden by specifying a configuration
file on the command line with the --config option.
.TP

.BR \-r ", " \-\^\-reversedns
Psad normally attempts to find the name associated with a
scanning ip address, but this feature can be disabled with
the --reversedns command line argument.
.TP

.BR \-w ", " \-\^\-whois
By default psad will issue a whois query against any ip from which
a scan has originated, but this can be disabled with the --whois
command line argument.
.TP

.BR \-L ", " \-\^\-Logging_server
This option should be used if psad is being executed on a syslog
logging server. Running psad on a logging server requires that
check_firewall_rules() and auto_psad_response() not be executed
since the firewall is probably not being run locally.
.TP

.BR \-s ", " \-\^\-signatures\ \ <sig\ file>
The firewalling code included within the linux 2.4.x kernel
series, iptables, has the ability to distinguish and log any
of the tcp flags present within tcp packets that traverse
the interfaces. Psad makes use of this logging capability
to detect several types of tcp scan signatures included
within
.B /etc/psad/psad_signatures.
The signatures were
originally included within the Snort intrusion detection
system. New signatures can be included and modifications to existing
signatures can be made to the signature file and psad will import
the change automatically without having to restart the psad process.
Unfortunately tcp signature checking is not compatible with the
ipchains firewalling code built into the 2.2.x kernel series due
to the fact that ipchains cannot distinguish any tcp flags other
than syn and ack.
.TP

.BR \-a ", " \-\^\-auto_ips\ \<auto\ ips\ file>
Occasionally certain ip addresses are repeat offenders and
should automatically be given a higher danger level than
would normally be assigned. Additionally, some ip addresses
can always be ignored depending on your network configuration
(the loopback interface 127.0.0.1 might be a good candidate
for example).
.B /etc/psad/psad_auto_ips
provides an interface for psad to automatically
increase/decrease/ignore scanning ip danger levels. Modifications
can be made to psad_auto_ips (installed by default in /etc/psad)
and psad will import them without having to restart the psad process.
.TP

.BR \-l ", " \-\^\-local_port_lookup
By default for iptables firewalls psad will determine whether
or not your machine is listening on a port for which a tcp
signature has been matched. Specifying --local_port_lookup
disables this feature.
.TP

.BR \-V ", " \-\^\-Version
Print the psad version and exit.
.TP

.BR \-h ", " \-\^\-help
Print a page of usage information for psad and exit.

.SH FILES
.B /etc/psad/psad_signatures
.RS
Contains the signatures psad uses to recognize nasty traffic. The
signatures are written in a manner similar to the *lib signature
files used in the Snort IDS.
.RE

.B /etc/psad/psad_auto_ips
.RS
Contains a listing of any ip addresses that should be assigned
a danger level based on any traffic that is denied/rejected by the
firewall. The syntax is "<ip address> <danger level>" where
<danger level> is an integer from -1 to 5, with -1 meaning to ignore
all traffic from <ip address>, and 5 is to assign the highest danger
level to <ip address>.
.RE

.B /etc/psad/psad.conf
.RS
The psad configuration file is used if and only if the --config
option is specified on the command line. Normally all configuration
parameters are specified within the configuration section of the psad
program itself. See
.B /usr/local/bin/psad.

.SH EXAMPLES
The following examples illustrate the command line arguments that could
be supplied to psad in a few situations:

Signature checking and automatic ip danger level assignment (best for
most situations):

.B psad -s /etc/psad/psad_signatures -a /etc/psad/psad_auto_ips

Disable the firewall check and the local port lookup subroutines; most useful
if psad is deployed on a syslog logging server:

.B psad --Logging_server --local_port_lookup

Disable reverse dns and whois lookups of scanning ip addresses; most useful
if speed of psad is the main concern:

.B psad --reversedns --whois

.SH DEPENDENCIES
.B psad
requires that ipchains/iptables is configured with a "drop/deny/reject
and log" policy for any traffic that is not explicitly allowed through.
This is consistent with a secure network configuration since all traffic
that has not been explicitly allowed should be blocked by the firewall
ruleset. By default, psad attempts to determine whether or not the
firewall has been configured in this way. This feature can be disabled with
the --firewallcheck or --Logging_server options. The --Logging_server option
is useful if psad is running on a syslog logging server that is separate
from the firewall. For more information on compatible ipchains/iptables
rulesets, see the
.B FW.EXAMPLES
file that is bundled with the psad source distribution.

.SH DIAGNOSTICS
The --debug option can be used to display crucial information
about the psad data structures on STDOUT as a scan generates firewall
log messages. --debug disables daemon mode execution.

Another more effective way to peer into the runtime execution of psad
is to send (as root) a USR1 signal to the psad process which will
cause psad to dump the contents of the %Scan hash to
.B /var/log/psad/scan_hash.$$
where
.B $$
represents the pid of the psad process.

.SH "SEE ALSO"
.BR ipchains (8),
.BR iptables (8),
.BR snort (8),
.BR nmap (1)

.SH AUTHOR
Michael B. Rash <mbr@cipherdyne.com>

.SH BUGS
Send bug reports to mbr@cipherdyne.com. Suggestions and/or comments are
always welcome as well.

-If $ENABLE_PERSISTENCE="Y", the scan data structures can become
large over time and consume lots of memory depending on the popularity
of your machine/site. Restarting psad solves this problem of course,
but a better way is on the TODO list.

-For iptables firewalls, if the ip_conntrack module is loaded (or compiled
into the kernel) and the firewall has been configured to keep state of
connections, occasionally packets that are supposed to be part of normal TCP
traffic will not be correctly identified and hence dropped.  Such packets
will then be interpreted as a scan by psad even though they are not part of
any malicious activity.  Fortunately the fix for this problem is to simply
extend the TCP_CONNTRACK_CLOSE_WAIT timeout value in
linux/net/ipv4/netfilter/ip_conntrack_proto_tcp.c from 60 seconds to 2 minutes,
and a kernel patch "conntrack_patch" is included with the psad source to
change this.  (Requires a kernel recompile of course, see the Kernel-HOWTO.)

.SH DISTRIBUTION
.B psad
is distributed under the GNU General Public License (GPL), and the latest
version may be downloaded from
.B http://www.cipherdyne.com
